{
  "name": "nova-frontend",
  "private": true,
  "scripts": {
    "adr": "adr-log -d docs/adr -e template.md -i",
    "dev": "nuxt dev",
    "generate": "nuxt generate",
    "preview": "nuxt preview",
    "prepare": "husky install",
    "build": "nuxi build",
    "serve": "npm run build && node .output/server/index.mjs",
    "lint": "npm run stylelint && npm run eslint",
    "eslint": "eslint --ext .js,.ts,vue --ignore-path .gitignore .",
    "eslint:fix": "eslint --ext .js,.ts,vue --ignore-path .gitignore . --fix",
    "stylelint": "stylelint '**/*.{vue,scss}'",
    "storybook": "start-storybook -p 6006",
    "build-storybook": "build-storybook",
    "test": "npm run test:integration && npm run test:unit:coverage",
    "test:unit": "vitest run",
    "test:unit:watch": "vitest",
    "test:unit:coverage": "vitest run --coverage",
    "test:integration": "playwright test",
    "test:sonar": "sonar-scanner",
    "typescript:check": "vue-tsc --noEmit",
    "typescript:check:watch": "vue-tsc --noEmit --watch",
    "get-api:all": "npm-run-all -p 'get-api:!(all)'",
    "get-api:experience-raw": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/offer/experience-raw-service-openapi.yaml | tar -x --strip-components=3 -C docs/api",
    "get-api:experience-master-data": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/master-data/product/experiences-master-data-openapi.yaml | tar -x --strip-components=4 -C docs/api",
    "get-api:content-command": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/content/content-command-openapi.yaml | tar -x --strip-components=3 -C docs/api",
    "get-api:content-master-data": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/master-data/product/content-master-data-openapi.yaml | tar -x --strip-components=4 -C docs/api",
    "get-api:content-query": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/content/content-query-service-openapi.yaml | tar -x --strip-components=3 -C docs/api",
    "get-api:metadata-experiences": "git archive --remote git@ssh.source.tui:dx/architecture/open-api-specifications.git master private-api-models/offer-and-sourcing-domain/offer/metadata-experiences-service-openapi.yaml | tar -x --strip-components=3 -C docs/api",
    "generate:all": "npm-run-all -p 'generate:!(all)'",
    "generate:experience-raw": "npm run get-api:experience-raw && generate-types -s docs/api/experience-raw-service-openapi.yaml -d types/generated/ExperienceRawServiceApi.ts -t TypeScript && prettier --write types/generated/ExperienceRawServiceApi.ts",
    "generate:experience-master-data": "npm run get-api:experience-master-data && generate-types -s docs/api/experiences-master-data-openapi.yaml -d types/generated/ExperienceMasterDataApi.ts -t TypeScript && prettier --write types/generated/ExperienceMasterDataApi.ts",
    "generate:content-command": "npm run get-api:content-command && generate-types -s docs/api/content-command-openapi.yaml -d types/generated/ContentCommandApi.ts -t TypeScript && prettier --write types/generated/ContentCommandApi.ts",
    "generate:content-master-data": "npm run get-api:content-command && generate-types -s docs/api/content-master-data-openapi.yaml -d types/generated/ContentMasterDataApi.ts -t TypeScript && prettier --write types/generated/ContentMasterDataApi.ts",
    "generate:content-query": "npm run get-api:content-query && generate-types -s docs/api/content-query-service-openapi.yaml -d types/generated/ContentQueryApi.ts -t TypeScript && prettier --write types/generated/ContentQueryApi.ts",
    "generate:metadata-experiences": "npm run get-api:metadata-experiences && generate-types -s docs/api/metadata-experiences-service-openapi.yaml -d types/generated/MetadataExperiencesApi.ts -t TypeScript && prettier --write types/generated/MetadataExperiencesApi.ts"
  },
  "lint-staged": {
    "*.(js|ts|vue)": [
      "npm run lint"
    ]
  },
  "devDependencies": {
    "@commitlint/cli": "^17.0.0",
    "@commitlint/config-conventional": "^17.0.0",
    "@musement/i18n": "git+ssh://git@gitlab.com/musement/translations/i18n.git#v4.3.5",
    "@musement/types-generator": "0.0.13",
    "@nuxt/test-utils": "^3.0.0-rc.8",
    "@nuxtjs/eslint-config-typescript": "^10.0.0",
    "@originjs/vite-plugin-federation": "^1.1.9",
    "@pinia/testing": "0.0.12",
    "@playwright/test": "^1.22.2",
    "@storybook/addon-actions": "^6.4.22",
    "@storybook/addon-essentials": "^6.4.22",
    "@storybook/addon-links": "^6.4.22",
    "@storybook/builder-vite": "^0.1.33",
    "@storybook/vue3": "^6.4.22",
    "@types/lodash.debounce": "^4.0.7",
    "@typescript-eslint/eslint-plugin": "^5.30.0",
    "@typescript-eslint/parser": "^5.30.0",
    "@vue/test-utils": "^2.0.1",
    "adr-log": "^2.2.0",
    "babel-loader": "^8.2.5",
    "eslint": "^8.15.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-vue": "^8.7.1",
    "husky": "^8.0.1",
    "jsdom": "^19.0.0",
    "lint-staged": "^12.4.1",
    "lodash.debounce": "^4.0.8",
    "npm-run-all": "^4.1.5",
    "nuxt": "^3.0.0-rc.8",
    "postcss-html": "^1.4.1",
    "prettier": "^2.6.2",
    "sass": "^1.51.0",
    "sonarqube-scanner": "^2.8.1",
    "stylelint": "^14.8.5",
    "stylelint-config-prettier": "^9.0.3",
    "stylelint-config-standard-scss": "^4.0.0",
    "stylelint-config-standard-vue": "^1.0.0",
    "stylelint-selector-bem-pattern": "^2.1.1",
    "typescript": "^4.6.4",
    "vite-svg-loader": "^3.3.0",
    "vitest": "^0.12.10",
    "vue-loader": "^16.8.3",
    "vue-tsc": "^0.38.2"
  },
  "dependencies": {
    "@pinia/nuxt": "^0.1.9",
    "@rsql/builder": "^1.3.3",
    "@rsql/emitter": "^1.3.3",
    "@tiptap/core": "^2.0.0-beta.182",
    "@tiptap/extension-bold": "^2.0.0-beta.28",
    "@tiptap/extension-bullet-list": "^2.0.0-beta.29",
    "@tiptap/extension-character-count": "^2.0.0-beta.31",
    "@tiptap/extension-document": "^2.0.0-beta.17",
    "@tiptap/extension-history": "^2.0.0-beta.26",
    "@tiptap/extension-italic": "^2.0.0-beta.28",
    "@tiptap/extension-list-item": "^2.0.0-beta.23",
    "@tiptap/extension-ordered-list": "^2.0.0-beta.30",
    "@tiptap/extension-paragraph": "^2.0.0-beta.26",
    "@tiptap/extension-placeholder": "^2.0.0-beta.53",
    "@tiptap/extension-text": "^2.0.0-beta.17",
    "@tiptap/extension-underline": "^2.0.0-beta.25",
    "@tiptap/vue-3": "^2.0.0-beta.96",
    "attr-accept": "^2.2.2",
    "axios": "^0.27.2",
    "jwt-decode": "^3.1.2",
    "pinia": "^2.0.14",
    "vuedraggable": "^4.1.0"
  }
}
